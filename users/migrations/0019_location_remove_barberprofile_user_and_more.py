# Generated by Django 5.1.6 on 2025-03-02 09:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0018_alter_barberprofile_certification_image_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.DecimalField(decimal_places=5, max_digits=10, verbose_name='longitude')),
                ('latitude', models.DecimalField(decimal_places=5, max_digits=10, verbose_name='latitude')),
            ],
        ),
        migrations.RemoveField(
            model_name='barberprofile',
            name='user',
        ),
        migrations.RemoveField(
            model_name='dayschedule',
            name='barber',
        ),
        migrations.RemoveField(
            model_name='offdays',
            name='barber',
        ),
        migrations.RemoveField(
            model_name='user',
            name='has_barber_profile',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='date joined'),
        ),
        migrations.CreateModel(
            name='Barber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True, verbose_name='available')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='barber', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Barber',
                'verbose_name_plural': 'barbers',
                'db_table': 'barbers',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.location'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='date')),
                ('accept_status', models.PositiveSmallIntegerField(choices=[('ACCEPTED', 1), ('REJECTED', 2), ('WAITING', 3)], default=3, verbose_name='accept status')),
                ('barber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='users.barber')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='reason')),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailability', to='users.barber')),
            ],
        ),
        migrations.CreateModel(
            name='WorkDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Sunday', 'Sunday'), ('Saturday', 'Saturday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], null=True, verbose_name='day')),
                ('start_time', models.TimeField(null=True, verbose_name='start time')),
                ('end_time', models.TimeField(null=True, verbose_name='end time')),
                ('barber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_days', to='users.barber')),
            ],
            options={
                'verbose_name': 'workDay',
                'verbose_name_plural': 'workDays',
                'db_table': 'workDays',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OffTimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(null=True, verbose_name='start time')),
                ('end_time', models.TimeField(null=True, verbose_name='end time')),
                ('reason', models.TextField(null=True, verbose_name='reason')),
                ('day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='off_times', to='users.workday')),
            ],
            options={
                'verbose_name': 'offTime',
                'verbose_name_plural': 'offTimes',
                'db_table': 'offTimes',
                'ordering': ['id'],
            },
        ),
        migrations.DeleteModel(
            name='Appointment',
        ),
        migrations.DeleteModel(
            name='DaySchedule',
        ),
        migrations.DeleteModel(
            name='BarberProfile',
        ),
        migrations.DeleteModel(
            name='OffDays',
        ),
    ]
